---
name: build

on: [
  push,
  pull_request
]

env:
  CURL_CACHE_DIR: ~/.cache/curl
  PIP_CACHE_DIR: ~/.cache/pip
  PRE_COMMIT_CACHE_DIR: ~/.cache/pre-commit
  RUN_TMATE: ${{ secrets.RUN_TMATE }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Cache pip test requirements
        uses: actions/cache@v1
        with:
          path: ${{ env.PIP_CACHE_DIR }}
          key: "${{ runner.os }}-pip-test-\
            ${{ hashFiles('**/requirements-test.txt') }}"
          restore-keys: |
            ${{ runner.os }}-pip-test-
            ${{ runner.os }}-pip-
      - name: Cache pre-commit hooks
        uses: actions/cache@v1
        with:
          path: ${{ env.PRE_COMMIT_CACHE_DIR }}
          key: "${{ runner.os }}-pre-commit-\
            ${{ hashFiles('**/.pre-commit-config.yaml') }}"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade \
                      --requirement requirements-test.txt
      - name: Run pre-commit on all files
        run: pre-commit run --all-files

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: cisagov/setup-env-github-action@develop
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Cache pip test requirements
        uses: actions/cache@v1
        with:
          path: ${{ env.PIP_CACHE_DIR }}
          key: "${{ runner.os }}-pip-test-\
            ${{ hashFiles('**/requirements-test.txt') }}"
          restore-keys: |
            ${{ runner.os }}-pip-test-
            ${{ runner.os }}-pip-
      - name: Cache curl downloads
        uses: actions/cache@v1
        with:
          path: ${{ env.CURL_CACHE_DIR }}
          key: ${{ runner.os }}-curl-packer-${{ env.PACKER_VERSION }}
      - name: Install Packer
        run: |
          mkdir -p ${{ env.CURL_CACHE_DIR }}
          PACKER_ZIP="packer_${PACKER_VERSION}_linux_amd64.zip"
          curl --output ${{ env.CURL_CACHE_DIR }}/"${PACKER_ZIP}" \
            --time-cond ${{ env.CURL_CACHE_DIR }}/"${PACKER_ZIP}" \
            --location \
            "https://releases.hashicorp.com/packer/${PACKER_VERSION}/${PACKER_ZIP}"
          sudo unzip -o -d /usr/local/bin \
            ${{ env.CURL_CACHE_DIR }}/"${PACKER_ZIP}"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade \
                      --requirement requirements-test.txt
      - name: Validate Packer configuration
        run: packer validate src/packer.json
      - name: Run tests
        env:
          GITHUB_RELEASE_TAG: ${{ github.event.release.tag_name }}
        run: pytest
      - name: Setup tmate debug session
        uses: mxschmitt/action-tmate@v1
        if: env.RUN_TMATE
